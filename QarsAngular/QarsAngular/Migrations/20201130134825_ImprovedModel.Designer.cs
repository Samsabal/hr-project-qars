// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using QarsAngular.Models;

namespace QarsAngular.Migrations
{
    [DbContext(typeof(CarsContext))]
    [Migration("20201130134825_ImprovedModel")]
    partial class ImprovedModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("QarsAngular.Models.Car", b =>
                {
                    b.Property<string>("licenseplate")
                        .HasColumnType("text");

                    b.Property<int?>("Carmodellinkcode")
                        .HasColumnType("integer");

                    b.Property<int>("carmodel")
                        .HasColumnType("integer");

                    b.Property<string>("locationcode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("mileage")
                        .HasColumnType("integer");

                    b.HasKey("licenseplate");

                    b.HasIndex("Carmodellinkcode");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("QarsAngular.Models.Carmodel", b =>
                {
                    b.Property<int>("code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("airconditioning")
                        .HasColumnType("boolean");

                    b.Property<string>("brand")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("dayrate")
                        .HasColumnType("double precision");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("doors")
                        .HasColumnType("integer");

                    b.Property<double>("efficiency")
                        .HasColumnType("double precision");

                    b.Property<int>("emission")
                        .HasColumnType("integer");

                    b.Property<int>("freemileage")
                        .HasColumnType("integer");

                    b.Property<string>("fueltype")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("kmrate")
                        .HasColumnType("double precision");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("passengers")
                        .HasColumnType("integer");

                    b.Property<int>("suitcases")
                        .HasColumnType("integer");

                    b.Property<string>("transmission")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("version")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("code");

                    b.ToTable("CarModels");
                });

            modelBuilder.Entity("QarsAngular.Models.Car", b =>
                {
                    b.HasOne("QarsAngular.Models.Carmodel", "Carmodellink")
                        .WithMany("Carlist")
                        .HasForeignKey("Carmodellinkcode");
                });
#pragma warning restore 612, 618
        }
    }
}
